plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'toy1'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	/* 뷰 템플릿 thymeleaf 사용 */
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	/* web 기술( 내장 tomcat 등) */
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/* DB ( MySQL) */
	implementation 'mysql:mysql-connector-java:8.0.33'

	/* JPA & Spring Data JPA */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	/*  QueryDsl */
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"


    /* lombok */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// for test
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	/* recompile을 통한 편리한 디버깅 */
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	/* validation */
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	/* junit */
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 재동 생성 Q클래스 제거 ( gradle 콘솔을 통해 관리할 때 유효 - clean)
clean {
	delete file('src/main/generated')
}